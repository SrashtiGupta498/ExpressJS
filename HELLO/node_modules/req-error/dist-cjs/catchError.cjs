"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wrapper = (fn) => {
    if (!(fn instanceof Function))
        return fn;
    return (req, res, next) => {
        try {
            const returnValue = fn(req, res, next);
            if (returnValue instanceof Promise)
                returnValue.catch(next);
        }
        catch (err) {
            next(err);
        }
    };
};
const catchErrorCore = (input) => {
    if (input instanceof Array)
        return input.map((fn) => wrapper(fn));
    if (input.toString() === '[object Object]') {
        const newObj = {};
        for (let key in input) {
            newObj[key] = wrapper(input[key]);
        }
        return newObj;
    }
    return wrapper(input);
};
const catchError = (...args) => {
    if (args.length === 0) {
        throw new Error('Catch needs at least 1 argument');
    }
    return args.length === 1
        ? catchErrorCore(args[0])
        : args.map((input) => catchErrorCore(input));
};
exports.default = catchError;
