class ReqError extends Error {
    constructor(message, statusCode) {
        let finalMessage = message;
        let finalStatusCode = statusCode;
        if (message instanceof Array) {
            finalMessage = message[0];
            finalStatusCode !== null && finalStatusCode !== void 0 ? finalStatusCode : (finalStatusCode = message[1]);
        }
        else if ((message === null || message === void 0 ? void 0 : message.toString()) === '[object Object]') {
            finalMessage = message.message;
            finalStatusCode !== null && finalStatusCode !== void 0 ? finalStatusCode : (finalStatusCode = message.statusCode);
        }
        if (typeof finalMessage !== 'string') {
            throw new Error('RequestError constructor gets invalid message');
        }
        if (finalStatusCode != undefined && typeof finalStatusCode !== 'number') {
            throw new Error('RequestError constructor gets invalid statusCode');
        }
        super(finalMessage);
        this.name = 'RequestError';
        this.isOperational = true;
        this.statusCode = finalStatusCode;
        Error.captureStackTrace(this, this.constructor);
    }
}
export default ReqError;
