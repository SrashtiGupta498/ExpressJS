import getErrorInfo, { errorMessages } from "./scripts/getErrorInfo.mjs";
import ReqError from "./ReqError.mjs";
export default (app, errorMsgs, formatJson) => {
    if (errorMsgs)
        Object.assign(errorMessages, errorMsgs);
    app.use((req, res, next) => {
        next(new ReqError(errorMessages.notFound));
    });
    app.use((err, req, res, next) => {
        const [message, statusCode = errorMessages.statusCode] = getErrorInfo(err);
        const resObj = { message };
        if (process.env.NODE_ENV === 'development') {
            Object.assign(resObj, { error: err, stack: err.stack });
        }
        if (res.headersSent) {
            return console.warn('Headers already sent!');
        }
        res.status(statusCode).json(formatJson
            ? formatJson(resObj, statusCode)
            : Object.assign({ status: statusCode < 500 ? 'fail' : 'error' }, resObj));
    });
};
